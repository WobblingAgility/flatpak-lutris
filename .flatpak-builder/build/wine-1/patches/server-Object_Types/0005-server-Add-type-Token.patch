From b4ba31df8d342f736a590977ba950d6f07f2377c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Wed, 8 Mar 2017 03:48:02 +0100
Subject: server: Add type Token.

---
 server/object.c | 2 +-
 server/object.h | 1 +
 server/token.c  | 9 ++++++++-
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/server/object.c b/server/object.c
index 960422df1c..c2c877f692 100644
--- a/server/object.c
+++ b/server/object.c
@@ -716,7 +716,7 @@ static const struct unicode_str type_array[] =
     {type_Type,          sizeof(type_Type)},
     {type_Directory,     sizeof(type_Directory)},
     {type_SymbolicLink,  sizeof(type_SymbolicLink)},
-    /* Token */
+    {type_Token,         sizeof(type_Token)},
     {type_Job,           sizeof(type_Job)},
     /* Process */
     /* Thread */
diff --git a/server/object.h b/server/object.h
index 0ed46b159d..46a9f770ca 100644
--- a/server/object.h
+++ b/server/object.h
@@ -257,6 +257,7 @@ static const WCHAR type_Section[] =       {'S','e','c','t','i','o','n'};
 static const WCHAR type_Semaphore[] =     {'S','e','m','a','p','h','o','r','e'};
 static const WCHAR type_SymbolicLink[] =  {'S','y','m','b','o','l','i','c','L','i','n','k'};
 static const WCHAR type_Timer[] =         {'T','i','m','e','r'};
+static const WCHAR type_Token[] =         {'T','o','k','e','n'};
 static const WCHAR type_Type[] =          {'T','y','p','e'};
 static const WCHAR type_WindowStation[] = {'W','i','n','d','o','w','S','t','a','t','i','o','n'};
 
diff --git a/server/token.c b/server/token.c
index 3b5c498147..f0afb95868 100644
--- a/server/token.c
+++ b/server/token.c
@@ -150,6 +150,7 @@ struct group
 };
 
 static void token_dump( struct object *obj, int verbose );
+static struct object_type *token_get_type( struct object *obj );
 static unsigned int token_map_access( struct object *obj, unsigned int access );
 static void token_destroy( struct object *obj );
 
@@ -157,7 +158,7 @@ static const struct object_ops token_ops =
 {
     sizeof(struct token),      /* size */
     token_dump,                /* dump */
-    no_get_type,               /* get_type */
+    token_get_type,            /* get_type */
     no_add_queue,              /* add_queue */
     NULL,                      /* remove_queue */
     NULL,                      /* signaled */
@@ -183,6 +184,12 @@ static void token_dump( struct object *obj, int verbose )
     /* FIXME: dump token members */
 }
 
+static struct object_type *token_get_type( struct object *obj )
+{
+    static const struct unicode_str str = { type_Token, sizeof(type_Token) };
+    return get_object_type( &str );
+}
+
 static unsigned int token_map_access( struct object *obj, unsigned int access )
 {
     if (access & GENERIC_READ)    access |= TOKEN_READ;
-- 
2.11.0

