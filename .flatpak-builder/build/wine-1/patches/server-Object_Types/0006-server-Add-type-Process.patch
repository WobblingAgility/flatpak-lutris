From 97057ab129833bd9fdcf683e05a44c0d06330edd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Wed, 8 Mar 2017 03:52:47 +0100
Subject: server: Add type Process.

---
 server/object.c  | 2 +-
 server/object.h  | 1 +
 server/process.c | 9 ++++++++-
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/server/object.c b/server/object.c
index c2c877f692..f7c249689f 100644
--- a/server/object.c
+++ b/server/object.c
@@ -718,7 +718,7 @@ static const struct unicode_str type_array[] =
     {type_SymbolicLink,  sizeof(type_SymbolicLink)},
     {type_Token,         sizeof(type_Token)},
     {type_Job,           sizeof(type_Job)},
-    /* Process */
+    {type_Process,       sizeof(type_Process)},
     /* Thread */
     {type_Event,         sizeof(type_Event)},
     {type_Mutant,        sizeof(type_Mutant)},
diff --git a/server/object.h b/server/object.h
index 46a9f770ca..cca12b6cf0 100644
--- a/server/object.h
+++ b/server/object.h
@@ -253,6 +253,7 @@ static const WCHAR type_Job[] =           {'J','o','b'};
 static const WCHAR type_Key[] =           {'K','e','y'};
 static const WCHAR type_KeyedEvent[] =    {'K','e','y','e','d','E','v','e','n','t'};
 static const WCHAR type_Mutant[] =        {'M','u','t','a','n','t'};
+static const WCHAR type_Process[] =       {'P','r','o','c','e','s','s'};
 static const WCHAR type_Section[] =       {'S','e','c','t','i','o','n'};
 static const WCHAR type_Semaphore[] =     {'S','e','m','a','p','h','o','r','e'};
 static const WCHAR type_SymbolicLink[] =  {'S','y','m','b','o','l','i','c','L','i','n','k'};
diff --git a/server/process.c b/server/process.c
index df1e9f1b0d..de3e926717 100644
--- a/server/process.c
+++ b/server/process.c
@@ -60,6 +60,7 @@ static int shutdown_stage;  /* current stage in the shutdown process */
 /* process operations */
 
 static void process_dump( struct object *obj, int verbose );
+static struct object_type *process_get_type( struct object *obj );
 static int process_signaled( struct object *obj, struct wait_queue_entry *entry );
 static unsigned int process_map_access( struct object *obj, unsigned int access );
 static struct security_descriptor *process_get_sd( struct object *obj );
@@ -71,7 +72,7 @@ static const struct object_ops process_ops =
 {
     sizeof(struct process),      /* size */
     process_dump,                /* dump */
-    no_get_type,                 /* get_type */
+    process_get_type,            /* get_type */
     add_queue,                   /* add_queue */
     remove_queue,                /* remove_queue */
     process_signaled,            /* signaled */
@@ -655,6 +656,12 @@ static void process_dump( struct object *obj, int verbose )
     fprintf( stderr, "Process id=%04x handles=%p\n", process->id, process->handles );
 }
 
+static struct object_type *process_get_type( struct object *obj )
+{
+    static const struct unicode_str str = { type_Process, sizeof(type_Process) };
+    return get_object_type( &str );
+}
+
 static int process_signaled( struct object *obj, struct wait_queue_entry *entry )
 {
     struct process *process = (struct process *)obj;
-- 
2.11.0

