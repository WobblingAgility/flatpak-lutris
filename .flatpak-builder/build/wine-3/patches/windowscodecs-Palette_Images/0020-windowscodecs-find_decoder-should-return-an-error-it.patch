From 55f662c7d5e524c33bc588d58580087a68083fbc Mon Sep 17 00:00:00 2001
From: Dmitry Timoshkov <dmitry@baikal.ru>
Date: Tue, 4 Oct 2016 18:33:40 +0800
Subject: windowscodecs: find_decoder() should return an error it received from
 the decoder.

If IWICBitmapDecoderInfo::MatchesPattern() has recognized the decoder by the pattern,
and the called IWICBitmapDecoder::Initialize() has failed, an error should be returned
right away instead of trying next codec. This allows report image format related errors
instead of WINCODEC_ERR_COMPONENTNOTFOUND.
---
 dlls/windowscodecs/imgfactory.c | 42 ++++++++++++++++++++++-------------------
 1 file changed, 23 insertions(+), 19 deletions(-)

diff --git a/dlls/windowscodecs/imgfactory.c b/dlls/windowscodecs/imgfactory.c
index e1bcc89a8b..70f2f0c1f3 100644
--- a/dlls/windowscodecs/imgfactory.c
+++ b/dlls/windowscodecs/imgfactory.c
@@ -120,22 +120,23 @@ static HRESULT WINAPI ComponentFactory_CreateDecoderFromFilename(
     return hr;
 }
 
-static IWICBitmapDecoder *find_decoder(IStream *pIStream, const GUID *pguidVendor,
-                                       WICDecodeOptions metadataOptions)
+static HRESULT find_decoder(IStream *pIStream, const GUID *pguidVendor,
+                            WICDecodeOptions metadataOptions, IWICBitmapDecoder **decoder)
 {
     IEnumUnknown *enumdecoders;
     IUnknown *unkdecoderinfo;
     IWICBitmapDecoderInfo *decoderinfo;
-    IWICBitmapDecoder *decoder = NULL;
     GUID vendor;
     HRESULT res;
     ULONG num_fetched;
     BOOL matches;
 
+    *decoder = NULL;
+
     res = CreateComponentEnumerator(WICDecoder, WICComponentEnumerateDefault, &enumdecoders);
-    if (FAILED(res)) return NULL;
+    if (FAILED(res)) return res;
 
-    while (!decoder)
+    while (!*decoder)
     {
         res = IEnumUnknown_Next(enumdecoders, 1, &unkdecoderinfo, &num_fetched);
 
@@ -160,18 +161,21 @@ static IWICBitmapDecoder *find_decoder(IStream *pIStream, const GUID *pguidVendo
 
                 if (SUCCEEDED(res) && matches)
                 {
-                    res = IWICBitmapDecoderInfo_CreateInstance(decoderinfo, &decoder);
+                    res = IWICBitmapDecoderInfo_CreateInstance(decoderinfo, decoder);
 
                     /* FIXME: should use QueryCapability to choose a decoder */
 
                     if (SUCCEEDED(res))
                     {
-                        res = IWICBitmapDecoder_Initialize(decoder, pIStream, metadataOptions);
+                        res = IWICBitmapDecoder_Initialize(*decoder, pIStream, metadataOptions);
 
                         if (FAILED(res))
                         {
-                            IWICBitmapDecoder_Release(decoder);
-                            decoder = NULL;
+                            IWICBitmapDecoder_Release(*decoder);
+                            IWICBitmapDecoderInfo_Release(decoderinfo);
+                            IUnknown_Release(unkdecoderinfo);
+                            *decoder = NULL;
+                            return res;
                         }
                     }
                 }
@@ -187,7 +191,7 @@ static IWICBitmapDecoder *find_decoder(IStream *pIStream, const GUID *pguidVendo
 
     IEnumUnknown_Release(enumdecoders);
 
-    return decoder;
+    return WINCODEC_ERR_COMPONENTNOTFOUND;
 }
 
 static HRESULT WINAPI ComponentFactory_CreateDecoderFromStream(
@@ -201,9 +205,9 @@ static HRESULT WINAPI ComponentFactory_CreateDecoderFromStream(
         metadataOptions, ppIDecoder);
 
     if (pguidVendor)
-        decoder = find_decoder(pIStream, pguidVendor, metadataOptions);
+        res = find_decoder(pIStream, pguidVendor, metadataOptions, &decoder);
     if (!decoder)
-        decoder = find_decoder(pIStream, NULL, metadataOptions);
+        res = find_decoder(pIStream, NULL, metadataOptions, &decoder);
 
     if (decoder)
     {
@@ -218,17 +222,17 @@ static HRESULT WINAPI ComponentFactory_CreateDecoderFromStream(
             BYTE data[4];
             ULONG bytesread;
 
-            WARN("failed to load from a stream\n");
+            WARN("failed to load from a stream %#x\n", res);
 
             seek.QuadPart = 0;
-            res = IStream_Seek(pIStream, seek, STREAM_SEEK_SET, NULL);
-            if (SUCCEEDED(res))
-                res = IStream_Read(pIStream, data, 4, &bytesread);
-            if (SUCCEEDED(res))
-                WARN("first %i bytes of stream=%x %x %x %x\n", bytesread, data[0], data[1], data[2], data[3]);
+            if (IStream_Seek(pIStream, seek, STREAM_SEEK_SET, NULL) == S_OK)
+            {
+                if (IStream_Read(pIStream, data, 4, &bytesread) == S_OK)
+                    WARN("first %i bytes of stream=%x %x %x %x\n", bytesread, data[0], data[1], data[2], data[3]);
+            }
         }
         *ppIDecoder = NULL;
-        return WINCODEC_ERR_COMPONENTNOTFOUND;
+        return res;
     }
 }
 
-- 
2.16.2

