From ea1f7f191b65313ed472e660a10d75e609a31dfc Mon Sep 17 00:00:00 2001
From: Dmitry Timoshkov <dmitry@baikal.ru>
Date: Fri, 14 Apr 2017 16:39:21 +0800
Subject: advapi32: Performance providers' Open() expects to see the configured
 name as its parameter.

---
 dlls/advapi32/registry.c | 23 +++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/dlls/advapi32/registry.c b/dlls/advapi32/registry.c
index a6e5c7903cf..37462380c40 100644
--- a/dlls/advapi32/registry.c
+++ b/dlls/advapi32/registry.c
@@ -1487,6 +1487,7 @@ LONG WINAPI RegSetKeyValueA( HKEY hkey, LPCSTR subkey, LPCSTR name, DWORD type,
 struct perf_provider
 {
     HMODULE perflib;
+    WCHAR linkage[MAX_PATH];
     PM_OPEN_PROC *pOpen;
     PM_CLOSE_PROC *pClose;
     PM_COLLECT_PROC *pCollect;
@@ -1512,6 +1513,8 @@ static BOOL load_provider(HKEY root, const WCHAR *name, struct perf_provider *pr
 {
     static const WCHAR performanceW[] = { 'P','e','r','f','o','r','m','a','n','c','e',0 };
     static const WCHAR libraryW[] = { 'L','i','b','r','a','r','y',0 };
+    static const WCHAR linkageW[] = { 'L','i','n','k','a','g','e',0 };
+    static const WCHAR exportW[] = { 'E','x','p','o','r','t',0 };
     WCHAR buf[MAX_PATH], buf2[MAX_PATH];
     DWORD err, type, len;
     HKEY service, perf;
@@ -1520,6 +1523,21 @@ static BOOL load_provider(HKEY root, const WCHAR *name, struct perf_provider *pr
     if (err != ERROR_SUCCESS)
         return FALSE;
 
+    provider->linkage[0] = 0;
+    err = RegOpenKeyExW(service, linkageW, 0, KEY_READ, &perf);
+    if (err == ERROR_SUCCESS)
+    {
+        len = sizeof(buf) - sizeof(WCHAR);
+        err = RegQueryValueExW(perf, exportW, NULL, &type, (BYTE *)buf, &len);
+        if (err == ERROR_SUCCESS && (type == REG_SZ || type == REG_MULTI_SZ))
+        {
+            memcpy(provider->linkage, buf, len);
+            provider->linkage[len / sizeof(WCHAR)] = 0;
+            TRACE("Export: %s\n", debugstr_w(provider->linkage));
+        }
+        RegCloseKey(perf);
+    }
+
     err = RegOpenKeyExW(service, performanceW, 0, KEY_READ, &perf);
     RegCloseKey(service);
     if (err != ERROR_SUCCESS)
@@ -1563,12 +1581,13 @@ error:
 
 static DWORD collect_data(struct perf_provider *provider, const WCHAR *query, void **data, DWORD *size, DWORD *obj_count)
 {
+    WCHAR *linkage = provider->linkage[0] ? provider->linkage : NULL;
     DWORD err;
 
-    err = provider->pOpen(NULL);
+    err = provider->pOpen(linkage);
     if (err != ERROR_SUCCESS)
     {
-        TRACE("Open error %u (%#x)\n", err, err);
+        TRACE("Open(%s) error %u (%#x)\n", debugstr_w(linkage), err, err);
         return err;
     }
 
-- 
2.13.1

