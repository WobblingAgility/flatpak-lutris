From 02879d85a14dd6fff5c473cf38f92dab1305f573 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Tue, 27 Jun 2017 02:08:50 +0200
Subject: server: Improve handling of hooks for normal (non-injected) hardware
 messages.

---
 server/queue.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/server/queue.c b/server/queue.c
index 941fcb6a307..ee8e5255848 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -1715,7 +1715,7 @@ static int queue_mouse_message( struct desktop *desktop, user_handle_t win, cons
     struct hardware_msg_data *msg_data;
     struct message *msg;
     unsigned int i, time, flags;
-    int wait = 0, x, y;
+    int hooked = 0, x, y;
 
     static const unsigned int messages[] =
     {
@@ -1821,13 +1821,13 @@ static int queue_mouse_message( struct desktop *desktop, user_handle_t win, cons
         /* specify a sender only when sending the last message */
         if (!(flags & ((1 << sizeof(messages)/sizeof(messages[0])) - 1)))
         {
-            if (!(wait = send_hook_ll_message( desktop, msg, input, sender )))
+            if (!(hooked = send_hook_ll_message( desktop, msg, input, sender )))
                 queue_hardware_message( desktop, msg, 0 );
         }
         else if (!send_hook_ll_message( desktop, msg, input, NULL ))
             queue_hardware_message( desktop, msg, 0 );
     }
-    return wait;
+    return hooked && sender;
 }
 
 /* queue a hardware message for a keyboard event */
@@ -1839,7 +1839,7 @@ static int queue_keyboard_message( struct desktop *desktop, user_handle_t win, c
     struct message *msg;
     unsigned char vkey = input->kbd.vkey;
     unsigned int message_code, time;
-    int wait;
+    int hooked;
 
     if (!(time = input->kbd.time)) time = get_tick_count();
 
@@ -1972,10 +1972,10 @@ static int queue_keyboard_message( struct desktop *desktop, user_handle_t win, c
         msg_data->flags |= (flags & (KF_EXTENDED | KF_ALTDOWN | KF_UP)) >> 8;
     }
 
-    if (!(wait = send_hook_ll_message( desktop, msg, input, sender )))
+    if (!(hooked = send_hook_ll_message( desktop, msg, input, sender )))
         queue_hardware_message( desktop, msg, 1 );
 
-    return wait;
+    return hooked && sender;
 }
 
 /* queue a hardware message for a custom type of event */
@@ -2493,7 +2493,7 @@ DECL_HANDLER(send_hardware_message)
 {
     struct thread *thread = NULL;
     struct desktop *desktop;
-    struct msg_queue *sender = get_current_queue();
+    struct msg_queue *sender = (req->flags & SEND_HWMSG_INJECTED) ? get_current_queue() : NULL;
     data_size_t size = min( 256, get_reply_max_size() );
 
     if (!(desktop = get_thread_desktop( current, 0 ))) return;
-- 
2.13.1

