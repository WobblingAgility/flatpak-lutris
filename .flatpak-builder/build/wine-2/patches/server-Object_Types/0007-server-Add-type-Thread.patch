From ef0142aadbcbd3e36ff3e2473dca76e68ba5ecba Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Wed, 8 Mar 2017 03:56:00 +0100
Subject: server: Add type Thread.

---
 server/object.c | 2 +-
 server/object.h | 1 +
 server/thread.c | 9 ++++++++-
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/server/object.c b/server/object.c
index f7c249689f..37ac0adce6 100644
--- a/server/object.c
+++ b/server/object.c
@@ -719,7 +719,7 @@ static const struct unicode_str type_array[] =
     {type_Token,         sizeof(type_Token)},
     {type_Job,           sizeof(type_Job)},
     {type_Process,       sizeof(type_Process)},
-    /* Thread */
+    {type_Thread,        sizeof(type_Thread)},
     {type_Event,         sizeof(type_Event)},
     {type_Mutant,        sizeof(type_Mutant)},
     {type_Semaphore,     sizeof(type_Semaphore)},
diff --git a/server/object.h b/server/object.h
index cca12b6cf0..3ba3f4b431 100644
--- a/server/object.h
+++ b/server/object.h
@@ -257,6 +257,7 @@ static const WCHAR type_Process[] =       {'P','r','o','c','e','s','s'};
 static const WCHAR type_Section[] =       {'S','e','c','t','i','o','n'};
 static const WCHAR type_Semaphore[] =     {'S','e','m','a','p','h','o','r','e'};
 static const WCHAR type_SymbolicLink[] =  {'S','y','m','b','o','l','i','c','L','i','n','k'};
+static const WCHAR type_Thread[] =        {'T','h','r','e','a','d'};
 static const WCHAR type_Timer[] =         {'T','i','m','e','r'};
 static const WCHAR type_Token[] =         {'T','o','k','e','n'};
 static const WCHAR type_Type[] =          {'T','y','p','e'};
diff --git a/server/thread.c b/server/thread.c
index 53e94fda42..108444ebc5 100644
--- a/server/thread.c
+++ b/server/thread.c
@@ -129,6 +129,7 @@ static const struct object_ops thread_apc_ops =
 /* thread operations */
 
 static void dump_thread( struct object *obj, int verbose );
+static struct object_type *thread_get_type( struct object *obj );
 static int thread_signaled( struct object *obj, struct wait_queue_entry *entry );
 static unsigned int thread_map_access( struct object *obj, unsigned int access );
 static void thread_poll_event( struct fd *fd, int event );
@@ -138,7 +139,7 @@ static const struct object_ops thread_ops =
 {
     sizeof(struct thread),      /* size */
     dump_thread,                /* dump */
-    no_get_type,                /* get_type */
+    thread_get_type,            /* get_type */
     add_queue,                  /* add_queue */
     remove_queue,               /* remove_queue */
     thread_signaled,            /* signaled */
@@ -344,6 +345,12 @@ static void dump_thread( struct object *obj, int verbose )
              thread->id, thread->unix_pid, thread->unix_tid, thread->state );
 }
 
+static struct object_type *thread_get_type( struct object *obj )
+{
+    static const struct unicode_str str = { type_Thread, sizeof(type_Thread) };
+    return get_object_type( &str );
+}
+
 static int thread_signaled( struct object *obj, struct wait_queue_entry *entry )
 {
     struct thread *mythread = (struct thread *)obj;
-- 
2.11.0

