/*** Autogenerated by WIDL 3.8 from scrobj.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __scrobj_h__
#define __scrobj_h__

/* Forward declarations */

#ifndef __IGenScriptletTLib_FWD_DEFINED__
#define __IGenScriptletTLib_FWD_DEFINED__
typedef interface IGenScriptletTLib IGenScriptletTLib;
#ifdef __cplusplus
interface IGenScriptletTLib;
#endif /* __cplusplus */
#endif

#ifndef __TypeLib_FWD_DEFINED__
#define __TypeLib_FWD_DEFINED__
#ifdef __cplusplus
typedef class TypeLib TypeLib;
#else
typedef struct TypeLib TypeLib;
#endif /* defined __cplusplus */
#endif /* defined __TypeLib_FWD_DEFINED__ */

/* Headers for imported files */

#include <unknwn.h>
#include <objidl.h>
#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif


DEFINE_GUID(LIBID_Scriptlet, 0x06290c00, 0x48aa, 0x11d2, 0x84,0x32, 0x00,0x60,0x08,0xc3,0xfb,0xfc);

/*****************************************************************************
 * IGenScriptletTLib interface
 */
#ifndef __IGenScriptletTLib_INTERFACE_DEFINED__
#define __IGenScriptletTLib_INTERFACE_DEFINED__

DEFINE_GUID(IID_IGenScriptletTLib, 0x2de0a190, 0xa1a4, 0x11d1, 0xb3,0x82, 0x00,0xa0,0xc9,0x11,0xe8,0xb2);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("2de0a190-a1a4-11d1-b382-00a0c911e8b2")
IGenScriptletTLib : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE AddURL(
        BSTR url) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Path(
        BSTR path) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Path(
        BSTR *path) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Doc(
        BSTR doc) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Doc(
        BSTR *doc) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_Name(
        BSTR name) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Name(
        BSTR *name) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_MajorVersion(
        WORD version) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_MajorVersion(
        WORD *version) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_MinorVersion(
        WORD version) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_MinorVersion(
        WORD *version) = 0;

    virtual HRESULT STDMETHODCALLTYPE Write(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE Reset(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_GUID(
        BSTR guid) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_GUID(
        BSTR *guid) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IGenScriptletTLib, 0x2de0a190, 0xa1a4, 0x11d1, 0xb3,0x82, 0x00,0xa0,0xc9,0x11,0xe8,0xb2)
#endif
#else
typedef struct IGenScriptletTLibVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IGenScriptletTLib *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IGenScriptletTLib *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IGenScriptletTLib *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IGenScriptletTLib *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IGenScriptletTLib *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IGenScriptletTLib *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IGenScriptletTLib *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IGenScriptletTLib methods ***/
    HRESULT (STDMETHODCALLTYPE *AddURL)(
        IGenScriptletTLib *This,
        BSTR url);

    HRESULT (STDMETHODCALLTYPE *put_Path)(
        IGenScriptletTLib *This,
        BSTR path);

    HRESULT (STDMETHODCALLTYPE *get_Path)(
        IGenScriptletTLib *This,
        BSTR *path);

    HRESULT (STDMETHODCALLTYPE *put_Doc)(
        IGenScriptletTLib *This,
        BSTR doc);

    HRESULT (STDMETHODCALLTYPE *get_Doc)(
        IGenScriptletTLib *This,
        BSTR *doc);

    HRESULT (STDMETHODCALLTYPE *put_Name)(
        IGenScriptletTLib *This,
        BSTR name);

    HRESULT (STDMETHODCALLTYPE *get_Name)(
        IGenScriptletTLib *This,
        BSTR *name);

    HRESULT (STDMETHODCALLTYPE *put_MajorVersion)(
        IGenScriptletTLib *This,
        WORD version);

    HRESULT (STDMETHODCALLTYPE *get_MajorVersion)(
        IGenScriptletTLib *This,
        WORD *version);

    HRESULT (STDMETHODCALLTYPE *put_MinorVersion)(
        IGenScriptletTLib *This,
        WORD version);

    HRESULT (STDMETHODCALLTYPE *get_MinorVersion)(
        IGenScriptletTLib *This,
        WORD *version);

    HRESULT (STDMETHODCALLTYPE *Write)(
        IGenScriptletTLib *This);

    HRESULT (STDMETHODCALLTYPE *Reset)(
        IGenScriptletTLib *This);

    HRESULT (STDMETHODCALLTYPE *put_GUID)(
        IGenScriptletTLib *This,
        BSTR guid);

    HRESULT (STDMETHODCALLTYPE *get_GUID)(
        IGenScriptletTLib *This,
        BSTR *guid);

    END_INTERFACE
} IGenScriptletTLibVtbl;

interface IGenScriptletTLib {
    CONST_VTBL IGenScriptletTLibVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IGenScriptletTLib_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IGenScriptletTLib_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IGenScriptletTLib_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IGenScriptletTLib_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IGenScriptletTLib_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IGenScriptletTLib_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IGenScriptletTLib_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IGenScriptletTLib methods ***/
#define IGenScriptletTLib_AddURL(This,url) (This)->lpVtbl->AddURL(This,url)
#define IGenScriptletTLib_put_Path(This,path) (This)->lpVtbl->put_Path(This,path)
#define IGenScriptletTLib_get_Path(This,path) (This)->lpVtbl->get_Path(This,path)
#define IGenScriptletTLib_put_Doc(This,doc) (This)->lpVtbl->put_Doc(This,doc)
#define IGenScriptletTLib_get_Doc(This,doc) (This)->lpVtbl->get_Doc(This,doc)
#define IGenScriptletTLib_put_Name(This,name) (This)->lpVtbl->put_Name(This,name)
#define IGenScriptletTLib_get_Name(This,name) (This)->lpVtbl->get_Name(This,name)
#define IGenScriptletTLib_put_MajorVersion(This,version) (This)->lpVtbl->put_MajorVersion(This,version)
#define IGenScriptletTLib_get_MajorVersion(This,version) (This)->lpVtbl->get_MajorVersion(This,version)
#define IGenScriptletTLib_put_MinorVersion(This,version) (This)->lpVtbl->put_MinorVersion(This,version)
#define IGenScriptletTLib_get_MinorVersion(This,version) (This)->lpVtbl->get_MinorVersion(This,version)
#define IGenScriptletTLib_Write(This) (This)->lpVtbl->Write(This)
#define IGenScriptletTLib_Reset(This) (This)->lpVtbl->Reset(This)
#define IGenScriptletTLib_put_GUID(This,guid) (This)->lpVtbl->put_GUID(This,guid)
#define IGenScriptletTLib_get_GUID(This,guid) (This)->lpVtbl->get_GUID(This,guid)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IGenScriptletTLib_QueryInterface(IGenScriptletTLib* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IGenScriptletTLib_AddRef(IGenScriptletTLib* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IGenScriptletTLib_Release(IGenScriptletTLib* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IGenScriptletTLib_GetTypeInfoCount(IGenScriptletTLib* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IGenScriptletTLib_GetTypeInfo(IGenScriptletTLib* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IGenScriptletTLib_GetIDsOfNames(IGenScriptletTLib* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IGenScriptletTLib_Invoke(IGenScriptletTLib* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IGenScriptletTLib methods ***/
static FORCEINLINE HRESULT IGenScriptletTLib_AddURL(IGenScriptletTLib* This,BSTR url) {
    return This->lpVtbl->AddURL(This,url);
}
static FORCEINLINE HRESULT IGenScriptletTLib_put_Path(IGenScriptletTLib* This,BSTR path) {
    return This->lpVtbl->put_Path(This,path);
}
static FORCEINLINE HRESULT IGenScriptletTLib_get_Path(IGenScriptletTLib* This,BSTR *path) {
    return This->lpVtbl->get_Path(This,path);
}
static FORCEINLINE HRESULT IGenScriptletTLib_put_Doc(IGenScriptletTLib* This,BSTR doc) {
    return This->lpVtbl->put_Doc(This,doc);
}
static FORCEINLINE HRESULT IGenScriptletTLib_get_Doc(IGenScriptletTLib* This,BSTR *doc) {
    return This->lpVtbl->get_Doc(This,doc);
}
static FORCEINLINE HRESULT IGenScriptletTLib_put_Name(IGenScriptletTLib* This,BSTR name) {
    return This->lpVtbl->put_Name(This,name);
}
static FORCEINLINE HRESULT IGenScriptletTLib_get_Name(IGenScriptletTLib* This,BSTR *name) {
    return This->lpVtbl->get_Name(This,name);
}
static FORCEINLINE HRESULT IGenScriptletTLib_put_MajorVersion(IGenScriptletTLib* This,WORD version) {
    return This->lpVtbl->put_MajorVersion(This,version);
}
static FORCEINLINE HRESULT IGenScriptletTLib_get_MajorVersion(IGenScriptletTLib* This,WORD *version) {
    return This->lpVtbl->get_MajorVersion(This,version);
}
static FORCEINLINE HRESULT IGenScriptletTLib_put_MinorVersion(IGenScriptletTLib* This,WORD version) {
    return This->lpVtbl->put_MinorVersion(This,version);
}
static FORCEINLINE HRESULT IGenScriptletTLib_get_MinorVersion(IGenScriptletTLib* This,WORD *version) {
    return This->lpVtbl->get_MinorVersion(This,version);
}
static FORCEINLINE HRESULT IGenScriptletTLib_Write(IGenScriptletTLib* This) {
    return This->lpVtbl->Write(This);
}
static FORCEINLINE HRESULT IGenScriptletTLib_Reset(IGenScriptletTLib* This) {
    return This->lpVtbl->Reset(This);
}
static FORCEINLINE HRESULT IGenScriptletTLib_put_GUID(IGenScriptletTLib* This,BSTR guid) {
    return This->lpVtbl->put_GUID(This,guid);
}
static FORCEINLINE HRESULT IGenScriptletTLib_get_GUID(IGenScriptletTLib* This,BSTR *guid) {
    return This->lpVtbl->get_GUID(This,guid);
}
#endif
#endif

#endif


#endif  /* __IGenScriptletTLib_INTERFACE_DEFINED__ */

/*****************************************************************************
 * TypeLib coclass
 */

DEFINE_GUID(CLSID_TypeLib, 0x06290bd5, 0x48aa, 0x11d2, 0x84,0x32, 0x00,0x60,0x08,0xc3,0xfb,0xfc);

#ifdef __cplusplus
class DECLSPEC_UUID("06290bd5-48aa-11d2-8432-006008c3fbfc") TypeLib;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(TypeLib, 0x06290bd5, 0x48aa, 0x11d2, 0x84,0x32, 0x00,0x60,0x08,0xc3,0xfb,0xfc)
#endif
#endif

/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER BSTR_UserSize     (ULONG *, ULONG, BSTR *);
unsigned char * __RPC_USER BSTR_UserMarshal  (ULONG *, unsigned char *, BSTR *);
unsigned char * __RPC_USER BSTR_UserUnmarshal(ULONG *, unsigned char *, BSTR *);
void            __RPC_USER BSTR_UserFree     (ULONG *, BSTR *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __scrobj_h__ */
