/*** Autogenerated by WIDL 3.8 from msiserver.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __msiserver_h__
#define __msiserver_h__

/* Forward declarations */

#ifndef __IMsiServer_FWD_DEFINED__
#define __IMsiServer_FWD_DEFINED__
typedef interface IMsiServer IMsiServer;
#ifdef __cplusplus
interface IMsiServer;
#endif /* __cplusplus */
#endif

#ifndef __IMsiMessage_FWD_DEFINED__
#define __IMsiMessage_FWD_DEFINED__
typedef interface IMsiMessage IMsiMessage;
#ifdef __cplusplus
interface IMsiMessage;
#endif /* __cplusplus */
#endif

#ifndef __IMsiCustomAction_FWD_DEFINED__
#define __IMsiCustomAction_FWD_DEFINED__
typedef interface IMsiCustomAction IMsiCustomAction;
#ifdef __cplusplus
interface IMsiCustomAction;
#endif /* __cplusplus */
#endif

#ifndef __IMsiRemoteAPI_FWD_DEFINED__
#define __IMsiRemoteAPI_FWD_DEFINED__
typedef interface IMsiRemoteAPI IMsiRemoteAPI;
#ifdef __cplusplus
interface IMsiRemoteAPI;
#endif /* __cplusplus */
#endif

#ifndef __MsiServer_FWD_DEFINED__
#define __MsiServer_FWD_DEFINED__
#ifdef __cplusplus
typedef class MsiServer MsiServer;
#else
typedef struct MsiServer MsiServer;
#endif /* defined __cplusplus */
#endif /* defined __MsiServer_FWD_DEFINED__ */

#ifndef __MsiServerMessage_FWD_DEFINED__
#define __MsiServerMessage_FWD_DEFINED__
#ifdef __cplusplus
typedef class MsiServerMessage MsiServerMessage;
#else
typedef struct MsiServerMessage MsiServerMessage;
#endif /* defined __cplusplus */
#endif /* defined __MsiServerMessage_FWD_DEFINED__ */

#ifndef __PSFactoryBuffer_FWD_DEFINED__
#define __PSFactoryBuffer_FWD_DEFINED__
#ifdef __cplusplus
typedef class PSFactoryBuffer PSFactoryBuffer;
#else
typedef struct PSFactoryBuffer PSFactoryBuffer;
#endif /* defined __cplusplus */
#endif /* defined __PSFactoryBuffer_FWD_DEFINED__ */

#ifndef __MsiInstaller_FWD_DEFINED__
#define __MsiInstaller_FWD_DEFINED__
#ifdef __cplusplus
typedef class MsiInstaller MsiInstaller;
#else
typedef struct MsiInstaller MsiInstaller;
#endif /* defined __cplusplus */
#endif /* defined __MsiInstaller_FWD_DEFINED__ */

#ifndef __MsiTransform_FWD_DEFINED__
#define __MsiTransform_FWD_DEFINED__
#ifdef __cplusplus
typedef class MsiTransform MsiTransform;
#else
typedef struct MsiTransform MsiTransform;
#endif /* defined __cplusplus */
#endif /* defined __MsiTransform_FWD_DEFINED__ */

#ifndef __MsiDatabase_FWD_DEFINED__
#define __MsiDatabase_FWD_DEFINED__
#ifdef __cplusplus
typedef class MsiDatabase MsiDatabase;
#else
typedef struct MsiDatabase MsiDatabase;
#endif /* defined __cplusplus */
#endif /* defined __MsiDatabase_FWD_DEFINED__ */

#ifndef __MsiPatch_FWD_DEFINED__
#define __MsiPatch_FWD_DEFINED__
#ifdef __cplusplus
typedef class MsiPatch MsiPatch;
#else
typedef struct MsiPatch MsiPatch;
#endif /* defined __cplusplus */
#endif /* defined __MsiPatch_FWD_DEFINED__ */

#ifndef __MsiServerX3_FWD_DEFINED__
#define __MsiServerX3_FWD_DEFINED__
#ifdef __cplusplus
typedef class MsiServerX3 MsiServerX3;
#else
typedef struct MsiServerX3 MsiServerX3;
#endif /* defined __cplusplus */
#endif /* defined __MsiServerX3_FWD_DEFINED__ */

#ifndef __WineMsiRemoteCustomAction_FWD_DEFINED__
#define __WineMsiRemoteCustomAction_FWD_DEFINED__
#ifdef __cplusplus
typedef class WineMsiRemoteCustomAction WineMsiRemoteCustomAction;
#else
typedef struct WineMsiRemoteCustomAction WineMsiRemoteCustomAction;
#endif /* defined __cplusplus */
#endif /* defined __WineMsiRemoteCustomAction_FWD_DEFINED__ */

#ifndef __Installer_FWD_DEFINED__
#define __Installer_FWD_DEFINED__
typedef interface Installer Installer;
#ifdef __cplusplus
interface Installer;
#endif /* __cplusplus */
#endif

#ifndef __Record_FWD_DEFINED__
#define __Record_FWD_DEFINED__
typedef interface Record Record;
#ifdef __cplusplus
interface Record;
#endif /* __cplusplus */
#endif

#ifndef __StringList_FWD_DEFINED__
#define __StringList_FWD_DEFINED__
typedef interface StringList StringList;
#ifdef __cplusplus
interface StringList;
#endif /* __cplusplus */
#endif

#ifndef __RecordList_FWD_DEFINED__
#define __RecordList_FWD_DEFINED__
typedef interface RecordList RecordList;
#ifdef __cplusplus
interface RecordList;
#endif /* __cplusplus */
#endif

#ifndef __UIPreview_FWD_DEFINED__
#define __UIPreview_FWD_DEFINED__
typedef interface UIPreview UIPreview;
#ifdef __cplusplus
interface UIPreview;
#endif /* __cplusplus */
#endif

#ifndef __SummaryInfo_FWD_DEFINED__
#define __SummaryInfo_FWD_DEFINED__
typedef interface SummaryInfo SummaryInfo;
#ifdef __cplusplus
interface SummaryInfo;
#endif /* __cplusplus */
#endif

#ifndef __View_FWD_DEFINED__
#define __View_FWD_DEFINED__
typedef interface View View;
#ifdef __cplusplus
interface View;
#endif /* __cplusplus */
#endif

#ifndef __Database_FWD_DEFINED__
#define __Database_FWD_DEFINED__
typedef interface Database Database;
#ifdef __cplusplus
interface Database;
#endif /* __cplusplus */
#endif

#ifndef __Session_FWD_DEFINED__
#define __Session_FWD_DEFINED__
typedef interface Session Session;
#ifdef __cplusplus
interface Session;
#endif /* __cplusplus */
#endif

#ifndef __FeatureInfo_FWD_DEFINED__
#define __FeatureInfo_FWD_DEFINED__
typedef interface FeatureInfo FeatureInfo;
#ifdef __cplusplus
interface FeatureInfo;
#endif /* __cplusplus */
#endif

#ifndef __Product_FWD_DEFINED__
#define __Product_FWD_DEFINED__
typedef interface Product Product;
#ifdef __cplusplus
interface Product;
#endif /* __cplusplus */
#endif

#ifndef __Patch_FWD_DEFINED__
#define __Patch_FWD_DEFINED__
typedef interface Patch Patch;
#ifdef __cplusplus
interface Patch;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <unknwn.h>
#include <wtypes.h>
#include <objidl.h>
#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif

/*****************************************************************************
 * IMsiServer interface
 */
#ifndef __IMsiServer_INTERFACE_DEFINED__
#define __IMsiServer_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMsiServer, 0x000c101c, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c101c-0000-0000-c000-000000000046")
IMsiServer : public IUnknown
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMsiServer, 0x000c101c, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct IMsiServerVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMsiServer *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMsiServer *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMsiServer *This);

    END_INTERFACE
} IMsiServerVtbl;

interface IMsiServer {
    CONST_VTBL IMsiServerVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMsiServer_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMsiServer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMsiServer_Release(This) (This)->lpVtbl->Release(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMsiServer_QueryInterface(IMsiServer* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMsiServer_AddRef(IMsiServer* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMsiServer_Release(IMsiServer* This) {
    return This->lpVtbl->Release(This);
}
#endif
#endif

#endif


#endif  /* __IMsiServer_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMsiMessage interface
 */
#ifndef __IMsiMessage_INTERFACE_DEFINED__
#define __IMsiMessage_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMsiMessage, 0x000c101d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c101d-0000-0000-c000-000000000046")
IMsiMessage : public IUnknown
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMsiMessage, 0x000c101d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct IMsiMessageVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMsiMessage *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMsiMessage *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMsiMessage *This);

    END_INTERFACE
} IMsiMessageVtbl;

interface IMsiMessage {
    CONST_VTBL IMsiMessageVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMsiMessage_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMsiMessage_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMsiMessage_Release(This) (This)->lpVtbl->Release(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMsiMessage_QueryInterface(IMsiMessage* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMsiMessage_AddRef(IMsiMessage* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMsiMessage_Release(IMsiMessage* This) {
    return This->lpVtbl->Release(This);
}
#endif
#endif

#endif


#endif  /* __IMsiMessage_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMsiCustomAction interface
 */
#ifndef __IMsiCustomAction_INTERFACE_DEFINED__
#define __IMsiCustomAction_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMsiCustomAction, 0x000c1025, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c1025-0000-0000-c000-000000000046")
IMsiCustomAction : public IUnknown
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMsiCustomAction, 0x000c1025, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct IMsiCustomActionVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMsiCustomAction *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMsiCustomAction *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMsiCustomAction *This);

    END_INTERFACE
} IMsiCustomActionVtbl;

interface IMsiCustomAction {
    CONST_VTBL IMsiCustomActionVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMsiCustomAction_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMsiCustomAction_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMsiCustomAction_Release(This) (This)->lpVtbl->Release(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMsiCustomAction_QueryInterface(IMsiCustomAction* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMsiCustomAction_AddRef(IMsiCustomAction* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMsiCustomAction_Release(IMsiCustomAction* This) {
    return This->lpVtbl->Release(This);
}
#endif
#endif

#endif


#endif  /* __IMsiCustomAction_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMsiRemoteAPI interface
 */
#ifndef __IMsiRemoteAPI_INTERFACE_DEFINED__
#define __IMsiRemoteAPI_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMsiRemoteAPI, 0x000c1033, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c1033-0000-0000-c000-000000000046")
IMsiRemoteAPI : public IUnknown
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMsiRemoteAPI, 0x000c1033, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct IMsiRemoteAPIVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMsiRemoteAPI *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMsiRemoteAPI *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMsiRemoteAPI *This);

    END_INTERFACE
} IMsiRemoteAPIVtbl;

interface IMsiRemoteAPI {
    CONST_VTBL IMsiRemoteAPIVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMsiRemoteAPI_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMsiRemoteAPI_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMsiRemoteAPI_Release(This) (This)->lpVtbl->Release(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IMsiRemoteAPI_QueryInterface(IMsiRemoteAPI* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IMsiRemoteAPI_AddRef(IMsiRemoteAPI* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IMsiRemoteAPI_Release(IMsiRemoteAPI* This) {
    return This->lpVtbl->Release(This);
}
#endif
#endif

#endif


#endif  /* __IMsiRemoteAPI_INTERFACE_DEFINED__ */

/*****************************************************************************
 * MsiServer coclass
 */

DEFINE_GUID(CLSID_MsiServer, 0x000c101c, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c101c-0000-0000-c000-000000000046") MsiServer;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MsiServer, 0x000c101c, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * MsiServerMessage coclass
 */

DEFINE_GUID(CLSID_MsiServerMessage, 0x000c101d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c101d-0000-0000-c000-000000000046") MsiServerMessage;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MsiServerMessage, 0x000c101d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * PSFactoryBuffer coclass
 */

DEFINE_GUID(CLSID_PSFactoryBuffer, 0x000c103e, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c103e-0000-0000-c000-000000000046") PSFactoryBuffer;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(PSFactoryBuffer, 0x000c103e, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * MsiInstaller coclass
 */

DEFINE_GUID(CLSID_MsiInstaller, 0x000c1090, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c1090-0000-0000-c000-000000000046") MsiInstaller;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MsiInstaller, 0x000c1090, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * MsiTransform coclass
 */

DEFINE_GUID(CLSID_MsiTransform, 0x000c1082, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c1082-0000-0000-c000-000000000046") MsiTransform;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MsiTransform, 0x000c1082, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * MsiDatabase coclass
 */

DEFINE_GUID(CLSID_MsiDatabase, 0x000c1084, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c1084-0000-0000-c000-000000000046") MsiDatabase;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MsiDatabase, 0x000c1084, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * MsiPatch coclass
 */

DEFINE_GUID(CLSID_MsiPatch, 0x000c1086, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c1086-0000-0000-c000-000000000046") MsiPatch;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MsiPatch, 0x000c1086, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * MsiServerX3 coclass
 */

DEFINE_GUID(CLSID_MsiServerX3, 0x000c1094, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("000c1094-0000-0000-c000-000000000046") MsiServerX3;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(MsiServerX3, 0x000c1094, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * WineMsiRemoteCustomAction coclass
 */

DEFINE_GUID(CLSID_WineMsiRemoteCustomAction, 0xba26e6fa, 0x4f27, 0x4f56, 0x95,0x3a, 0x3f,0x90,0x27,0x20,0x18,0xaa);

#ifdef __cplusplus
class DECLSPEC_UUID("ba26e6fa-4f27-4f56-953a-3f90272018aa") WineMsiRemoteCustomAction;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(WineMsiRemoteCustomAction, 0xba26e6fa, 0x4f27, 0x4f56, 0x95,0x3a, 0x3f,0x90,0x27,0x20,0x18,0xaa)
#endif
#endif


DEFINE_GUID(LIBID_WindowsInstaller, 0x000c1092, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifndef __Installer_FWD_DEFINED__
#define __Installer_FWD_DEFINED__
typedef interface Installer Installer;
#ifdef __cplusplus
interface Installer;
#endif /* __cplusplus */
#endif

#ifndef __Record_FWD_DEFINED__
#define __Record_FWD_DEFINED__
typedef interface Record Record;
#ifdef __cplusplus
interface Record;
#endif /* __cplusplus */
#endif

#ifndef __Session_FWD_DEFINED__
#define __Session_FWD_DEFINED__
typedef interface Session Session;
#ifdef __cplusplus
interface Session;
#endif /* __cplusplus */
#endif

#ifndef __Database_FWD_DEFINED__
#define __Database_FWD_DEFINED__
typedef interface Database Database;
#ifdef __cplusplus
interface Database;
#endif /* __cplusplus */
#endif

#ifndef __SummaryInfo_FWD_DEFINED__
#define __SummaryInfo_FWD_DEFINED__
typedef interface SummaryInfo SummaryInfo;
#ifdef __cplusplus
interface SummaryInfo;
#endif /* __cplusplus */
#endif

#ifndef __View_FWD_DEFINED__
#define __View_FWD_DEFINED__
typedef interface View View;
#ifdef __cplusplus
interface View;
#endif /* __cplusplus */
#endif

#ifndef __UIPreview_FWD_DEFINED__
#define __UIPreview_FWD_DEFINED__
typedef interface UIPreview UIPreview;
#ifdef __cplusplus
interface UIPreview;
#endif /* __cplusplus */
#endif

#ifndef __FeatureInfo_FWD_DEFINED__
#define __FeatureInfo_FWD_DEFINED__
typedef interface FeatureInfo FeatureInfo;
#ifdef __cplusplus
interface FeatureInfo;
#endif /* __cplusplus */
#endif

#ifndef __RecordList_FWD_DEFINED__
#define __RecordList_FWD_DEFINED__
typedef interface RecordList RecordList;
#ifdef __cplusplus
interface RecordList;
#endif /* __cplusplus */
#endif

#ifndef __StringList_FWD_DEFINED__
#define __StringList_FWD_DEFINED__
typedef interface StringList StringList;
#ifdef __cplusplus
interface StringList;
#endif /* __cplusplus */
#endif

#ifndef __Product_FWD_DEFINED__
#define __Product_FWD_DEFINED__
typedef interface Product Product;
#ifdef __cplusplus
interface Product;
#endif /* __cplusplus */
#endif

#ifndef __Patch_FWD_DEFINED__
#define __Patch_FWD_DEFINED__
typedef interface Patch Patch;
#ifdef __cplusplus
interface Patch;
#endif /* __cplusplus */
#endif

typedef enum __WIDL_msiserver_generated_name_00000002 {
    msiInstallStateNotUsed = -7,
    msiInstallStateBadConfig = -6,
    msiInstallStateIncomplete = -5,
    msiInstallStateSourceAbsent = -4,
    msiInstallStateInvalidArg = -2,
    msiInstallStateUnknown = -1,
    msiInstallStateBroken = 0,
    msiInstallStateAdvertised = 1,
    msiInstallStateRemoved = 1,
    msiInstallStateAbsent = 2,
    msiInstallStateLocal = 3,
    msiInstallStateSource = 4,
    msiInstallStateDefault = 5
} MsiInstallState;
typedef enum __WIDL_msiserver_generated_name_00000003 {
    msiOpenDatabaseModeReadOnly = 0,
    msiOpenDatabaseModeTransact = 1,
    msiOpenDatabaseModeDirect = 2,
    msiOpenDatabaseModeCreate = 3,
    msiOpenDatabaseModeCreateDirect = 4,
    msiOpenDatabaseModePatchFile = 32
} MsiOpenDatabaseMode;
typedef enum __WIDL_msiserver_generated_name_00000004 {
    msiUILevelNoChange = 0,
    msiUILevelDefault = 1,
    msiUILevelNone = 2,
    msiUILevelBasic = 3,
    msiUILevelReduced = 4,
    msiUILevelFull = 5,
    msiUILevelHideCancel = 32,
    msiUILevelProgressOnly = 64,
    msiUILevelEndDialog = 128,
    msiUILevelSourceResOnly = 256
} MsiUILevel;
/*****************************************************************************
 * Installer dispinterface
 */
#ifndef __Installer_DISPINTERFACE_DEFINED__
#define __Installer_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Installer, 0x000c1090, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c1090-0000-0000-c000-000000000046")
Installer : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Installer, 0x000c1090, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct InstallerVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Installer *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Installer *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Installer *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Installer *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Installer *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Installer *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Installer *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} InstallerVtbl;

interface Installer {
    CONST_VTBL InstallerVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Installer_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Installer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Installer_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Installer_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Installer_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Installer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Installer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT Installer_QueryInterface(Installer* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG Installer_AddRef(Installer* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG Installer_Release(Installer* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT Installer_GetTypeInfoCount(Installer* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT Installer_GetTypeInfo(Installer* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT Installer_GetIDsOfNames(Installer* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT Installer_Invoke(Installer* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Installer_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * Record dispinterface
 */
#ifndef __Record_DISPINTERFACE_DEFINED__
#define __Record_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Record, 0x000c1093, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c1093-0000-0000-c000-000000000046")
Record : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Record, 0x000c1093, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct RecordVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Record *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Record *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Record *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Record *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Record *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Record *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Record *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} RecordVtbl;

interface Record {
    CONST_VTBL RecordVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Record_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Record_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Record_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Record_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Record_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Record_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Record_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT Record_QueryInterface(Record* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG Record_AddRef(Record* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG Record_Release(Record* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT Record_GetTypeInfoCount(Record* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT Record_GetTypeInfo(Record* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT Record_GetIDsOfNames(Record* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT Record_Invoke(Record* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Record_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * StringList dispinterface
 */
#ifndef __StringList_DISPINTERFACE_DEFINED__
#define __StringList_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_StringList, 0x000c1095, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c1095-0000-0000-c000-000000000046")
StringList : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(StringList, 0x000c1095, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct StringListVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        StringList *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        StringList *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        StringList *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        StringList *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        StringList *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        StringList *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        StringList *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} StringListVtbl;

interface StringList {
    CONST_VTBL StringListVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define StringList_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define StringList_AddRef(This) (This)->lpVtbl->AddRef(This)
#define StringList_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define StringList_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define StringList_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define StringList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define StringList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT StringList_QueryInterface(StringList* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG StringList_AddRef(StringList* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG StringList_Release(StringList* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT StringList_GetTypeInfoCount(StringList* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT StringList_GetTypeInfo(StringList* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT StringList_GetIDsOfNames(StringList* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT StringList_Invoke(StringList* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __StringList_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * RecordList dispinterface
 */
#ifndef __RecordList_DISPINTERFACE_DEFINED__
#define __RecordList_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_RecordList, 0x000c1096, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c1096-0000-0000-c000-000000000046")
RecordList : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(RecordList, 0x000c1096, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct RecordListVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        RecordList *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        RecordList *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        RecordList *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        RecordList *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        RecordList *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        RecordList *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        RecordList *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} RecordListVtbl;

interface RecordList {
    CONST_VTBL RecordListVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define RecordList_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define RecordList_AddRef(This) (This)->lpVtbl->AddRef(This)
#define RecordList_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define RecordList_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define RecordList_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define RecordList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define RecordList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT RecordList_QueryInterface(RecordList* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG RecordList_AddRef(RecordList* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG RecordList_Release(RecordList* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT RecordList_GetTypeInfoCount(RecordList* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT RecordList_GetTypeInfo(RecordList* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT RecordList_GetIDsOfNames(RecordList* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT RecordList_Invoke(RecordList* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __RecordList_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * UIPreview dispinterface
 */
#ifndef __UIPreview_DISPINTERFACE_DEFINED__
#define __UIPreview_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_UIPreview, 0x000c109a, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c109a-0000-0000-c000-000000000046")
UIPreview : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(UIPreview, 0x000c109a, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct UIPreviewVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        UIPreview *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        UIPreview *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        UIPreview *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        UIPreview *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        UIPreview *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        UIPreview *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        UIPreview *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} UIPreviewVtbl;

interface UIPreview {
    CONST_VTBL UIPreviewVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define UIPreview_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define UIPreview_AddRef(This) (This)->lpVtbl->AddRef(This)
#define UIPreview_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define UIPreview_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define UIPreview_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define UIPreview_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define UIPreview_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT UIPreview_QueryInterface(UIPreview* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG UIPreview_AddRef(UIPreview* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG UIPreview_Release(UIPreview* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT UIPreview_GetTypeInfoCount(UIPreview* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT UIPreview_GetTypeInfo(UIPreview* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT UIPreview_GetIDsOfNames(UIPreview* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT UIPreview_Invoke(UIPreview* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __UIPreview_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * SummaryInfo dispinterface
 */
#ifndef __SummaryInfo_DISPINTERFACE_DEFINED__
#define __SummaryInfo_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_SummaryInfo, 0x000c109b, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c109b-0000-0000-c000-000000000046")
SummaryInfo : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(SummaryInfo, 0x000c109b, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct SummaryInfoVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        SummaryInfo *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        SummaryInfo *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        SummaryInfo *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        SummaryInfo *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        SummaryInfo *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        SummaryInfo *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        SummaryInfo *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} SummaryInfoVtbl;

interface SummaryInfo {
    CONST_VTBL SummaryInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define SummaryInfo_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define SummaryInfo_AddRef(This) (This)->lpVtbl->AddRef(This)
#define SummaryInfo_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define SummaryInfo_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define SummaryInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define SummaryInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define SummaryInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT SummaryInfo_QueryInterface(SummaryInfo* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG SummaryInfo_AddRef(SummaryInfo* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG SummaryInfo_Release(SummaryInfo* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT SummaryInfo_GetTypeInfoCount(SummaryInfo* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT SummaryInfo_GetTypeInfo(SummaryInfo* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT SummaryInfo_GetIDsOfNames(SummaryInfo* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT SummaryInfo_Invoke(SummaryInfo* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __SummaryInfo_DISPINTERFACE_DEFINED__ */

typedef enum __WIDL_msiserver_generated_name_00000005 {
    msiViewModifySeek = -1,
    msiViewModifyRefresh = 0,
    msiViewModifyInsert = 1,
    msiViewModifyUpdate = 2,
    msiViewModifyAssign = 3,
    msiViewModifyReplace = 4,
    msiViewModifyMerge = 5,
    msiViewModifyDelete = 6,
    msiViewModifyInsertTemporary = 7,
    msiViewModifyValidate = 8,
    msiViewModifyValidateNew = 9,
    msiViewModifyValidateField = 10,
    msiViewModifyValidateDelete = 11
} _MsiViewModify;
/*****************************************************************************
 * View dispinterface
 */
#ifndef __View_DISPINTERFACE_DEFINED__
#define __View_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_View, 0x000c109c, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c109c-0000-0000-c000-000000000046")
View : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(View, 0x000c109c, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct ViewVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        View *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        View *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        View *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        View *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        View *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        View *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        View *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ViewVtbl;

interface View {
    CONST_VTBL ViewVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define View_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define View_AddRef(This) (This)->lpVtbl->AddRef(This)
#define View_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define View_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define View_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define View_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define View_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT View_QueryInterface(View* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG View_AddRef(View* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG View_Release(View* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT View_GetTypeInfoCount(View* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT View_GetTypeInfo(View* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT View_GetIDsOfNames(View* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT View_Invoke(View* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __View_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * Database dispinterface
 */
#ifndef __Database_DISPINTERFACE_DEFINED__
#define __Database_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Database, 0x000c109d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c109d-0000-0000-c000-000000000046")
Database : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Database, 0x000c109d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct DatabaseVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Database *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Database *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Database *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Database *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Database *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Database *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Database *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} DatabaseVtbl;

interface Database {
    CONST_VTBL DatabaseVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Database_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Database_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Database_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Database_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Database_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Database_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Database_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT Database_QueryInterface(Database* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG Database_AddRef(Database* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG Database_Release(Database* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT Database_GetTypeInfoCount(Database* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT Database_GetTypeInfo(Database* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT Database_GetIDsOfNames(Database* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT Database_Invoke(Database* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Database_DISPINTERFACE_DEFINED__ */

typedef enum __WIDL_msiserver_generated_name_00000006 {
    msiDoActionStatusNoAction = 0,
    msiDoActionStatusSuccess = 1,
    msiDoActionStatusUserExit = 2,
    msiDoActionStatusFailure = 3,
    msiDoActionStatusSuspend = 4,
    msiDoActionStatusFinished = 5,
    msiDoActionStatusWrongState = 6,
    msiDoActionStatusBadActionData = 7
} MsiDoActionStatus;
typedef enum __WIDL_msiserver_generated_name_00000007 {
    msiRunModeAdmin = 0,
    msiRunModeAdvertise = 1,
    msiRunModeMaintenance = 2,
    msiRunModeRollbackEnabled = 3,
    msiRunModeLogEnabled = 4,
    msiRunModeOperations = 5,
    msiRunModeRebootAtEnd = 6,
    msiRunModeRebootNow = 7,
    msiRunModeCabinet = 8,
    msiRunModeSourceShortNames = 9,
    msiRunModeTargetShortNames = 10,
    msiRunModeWindows9x = 12,
    msiRunModeZawEnabled = 13,
    msiRunModeScheduled = 16,
    msiRunModeRollback = 17,
    msiRunModeCommit = 18
} MsiRunMode;
typedef enum __WIDL_msiserver_generated_name_00000008 {
    msiEvaluateConditionFalse = 0,
    msiEvaluateConditionTrue = 1,
    msiEvaluateConditionNone = 2,
    msiEvaluateConditionError = 3
} _MsiEvaluateCondition;
typedef enum __WIDL_msiserver_generated_name_00000009 {
    msiMessageStatusError = -1,
    msiMessageStatusNone = 0,
    msiMessageStatusOk = 1,
    msiMessageStatusCancel = 2,
    msiMessageStatusAbort = 3,
    msiMessageStatusRetry = 4,
    msiMessageStatusIgnore = 5,
    msiMessageStatusYes = 6,
    msiMessageStatusNo = 7
} MsiMessageStatus;
typedef enum __WIDL_msiserver_generated_name_0000000A {
    msiMessageTypeFatalExit = 0,
    msiMessageTypeError = 0x1000000,
    msiMessageTypeWarning = 0x2000000,
    msiMessageTypeUser = 0x3000000,
    msiMessageTypeInfo = 0x4000000,
    msiMessageTypeFilesInUse = 0x5000000,
    msiMessageTypeResolveSource = 0x6000000,
    msiMessageTypeOutOfDiskSpace = 0x7000000,
    msiMessageTypeActionStart = 0x8000000,
    msiMessageTypeActionData = 0x9000000,
    msiMessageTypeProgress = 0xa000000,
    msiMessageTypeCommonData = 0xb000000,
    msiMessageTypeOk = 0,
    msiMessageTypeOkCancel = 1,
    msiMessageTypeAbortRetryIgnore = 2,
    msiMessageTypeYesNoCancel = 3,
    msiMessageTypeYesNo = 4,
    msiMessageTypeRetryCancel = 5,
    msiMessageTypeDefault1 = 0,
    msiMessageTypeDefault2 = 256,
    msiMessageTypeDefault3 = 512
} MsiMessageType;
/*****************************************************************************
 * Session dispinterface
 */
#ifndef __Session_DISPINTERFACE_DEFINED__
#define __Session_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Session, 0x000c109e, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c109e-0000-0000-c000-000000000046")
Session : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Session, 0x000c109e, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct SessionVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Session *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Session *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Session *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Session *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Session *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Session *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Session *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} SessionVtbl;

interface Session {
    CONST_VTBL SessionVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Session_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Session_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Session_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Session_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Session_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Session_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Session_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT Session_QueryInterface(Session* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG Session_AddRef(Session* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG Session_Release(Session* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT Session_GetTypeInfoCount(Session* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT Session_GetTypeInfo(Session* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT Session_GetIDsOfNames(Session* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT Session_Invoke(Session* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Session_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * FeatureInfo dispinterface
 */
#ifndef __FeatureInfo_DISPINTERFACE_DEFINED__
#define __FeatureInfo_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_FeatureInfo, 0x000c109f, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c109f-0000-0000-c000-000000000046")
FeatureInfo : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(FeatureInfo, 0x000c109f, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct FeatureInfoVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        FeatureInfo *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        FeatureInfo *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        FeatureInfo *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        FeatureInfo *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        FeatureInfo *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        FeatureInfo *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        FeatureInfo *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} FeatureInfoVtbl;

interface FeatureInfo {
    CONST_VTBL FeatureInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define FeatureInfo_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define FeatureInfo_AddRef(This) (This)->lpVtbl->AddRef(This)
#define FeatureInfo_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define FeatureInfo_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define FeatureInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define FeatureInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define FeatureInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT FeatureInfo_QueryInterface(FeatureInfo* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG FeatureInfo_AddRef(FeatureInfo* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG FeatureInfo_Release(FeatureInfo* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT FeatureInfo_GetTypeInfoCount(FeatureInfo* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT FeatureInfo_GetTypeInfo(FeatureInfo* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT FeatureInfo_GetIDsOfNames(FeatureInfo* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT FeatureInfo_Invoke(FeatureInfo* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __FeatureInfo_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * Product dispinterface
 */
#ifndef __Product_DISPINTERFACE_DEFINED__
#define __Product_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Product, 0x000c10a0, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c10a0-0000-0000-c000-000000000046")
Product : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Product, 0x000c10a0, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct ProductVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Product *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Product *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Product *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Product *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Product *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Product *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Product *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ProductVtbl;

interface Product {
    CONST_VTBL ProductVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Product_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Product_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Product_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Product_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Product_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Product_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Product_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT Product_QueryInterface(Product* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG Product_AddRef(Product* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG Product_Release(Product* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT Product_GetTypeInfoCount(Product* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT Product_GetTypeInfo(Product* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT Product_GetIDsOfNames(Product* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT Product_Invoke(Product* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Product_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * Patch dispinterface
 */
#ifndef __Patch_DISPINTERFACE_DEFINED__
#define __Patch_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Patch, 0x000c10a1, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("000c10a1-0000-0000-c000-000000000046")
Patch : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Patch, 0x000c10a1, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct PatchVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Patch *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Patch *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Patch *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Patch *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Patch *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Patch *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Patch *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} PatchVtbl;

interface Patch {
    CONST_VTBL PatchVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Patch_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Patch_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Patch_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Patch_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Patch_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Patch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Patch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT Patch_QueryInterface(Patch* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG Patch_AddRef(Patch* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG Patch_Release(Patch* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT Patch_GetTypeInfoCount(Patch* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT Patch_GetTypeInfo(Patch* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT Patch_GetIDsOfNames(Patch* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT Patch_Invoke(Patch* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Patch_DISPINTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __msiserver_h__ */
